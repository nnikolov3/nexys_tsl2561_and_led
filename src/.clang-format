---
# Base style (closest match to common embedded C practices)
BasedOnStyle: LLVM

# Use 4 spaces for indentation, no tabs
IndentWidth: 4
UseTab: Never
TabWidth: 4
BracedInitializerIndentWidth: 4
ContinuationIndentWidth: 4

AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: AcrossEmptyLinesAndComments
AlignConsecutiveMacros: AcrossEmptyLinesAndComments
AlignOperands: true
AlignTrailingComments: true
AlignArrayOfStructures: Right
AlignEscapedNewlines: Left
IncludeBlocks: Regroup
IndentCaseBlocks: true
# Space inside brackets for readability
SpaceBeforeParens: false
SpaceInEmptyParentheses: true
SpacesInParentheses: true
SpacesInSquareBrackets: true
SpacesInContainerLiterals: true
SpaceAfterCStyleCast: true
IndentCaseLabels: true
MaxEmptyLinesToKeep: 1
ReferenceAlignment: Right
SeparateDefinitionBlocks: Always

# Additional alignment and spacing tweaks
ColumnLimit: 80
BreakBeforeBraces: Allman # Each brace on a new line for clarity
AllowShortFunctionsOnASingleLine: None # No single-line functions
PointerAlignment: Left # int* ptr (not int *ptr)
BinPackArguments: false # Don't pack arguments, align them
BinPackParameters: false # Don't pack parameters, align them

# Align comments (removed invalid MinCommentAlignment)
CommentPragmas: "^ IWYU pragma:"

# Ensure consistent spacing around operators
SpaceBeforeAssignmentOperators: true
SpaceBeforeRangeBasedForLoopColon: true
SpaceAroundPointerQualifiers: After # int* not int *
InsertNewlineAtEOF: True
ReflowComments: true
---
